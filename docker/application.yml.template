---
grails:
    profile: web
    codegen:
        defaultPackage: anonymous.feedback
    spring:
        transactionManagement:
            proxies: false
    gorm:
        reactor:
            # Whether to translate GORM events into Reactor events
            # Disabled by default for performance reasons
            events: false
    mail:
        host: ${mail_host}
        port: 25
        overrideAddress:
        disabled: false
        smtp:
            connectiontimeout: 5000
            timeout: 3000
            writetimeout: 5000
        default:
            from: ${mail_from_address}
            replyTo: ${mail_replyto_address}
info:
    app:
        name: '@info.app.name@'
        version: '@info.app.version@'
        grailsVersion: '@info.app.grailsVersion@'
spring:
    main:
        banner-mode: "off"
    groovy:
        template:
            check-template-location: false

# Spring Actuator Endpoints are Disabled by Default
endpoints:
    enabled: false
    jmx:
        enabled: true

server:
    contextPath: /feedback

---
grails:
    serverURL: ${public_url}/feedback
    mime:
        disable:
            accept:
                header:
                    userAgents:
                        - Gecko
                        - WebKit
                        - Presto
                        - Trident
        types:
            all: '*/*'
            atom: application/atom+xml
            css: text/css
            csv: text/csv
            form: application/x-www-form-urlencoded
            html:
              - text/html
              - application/xhtml+xml
            js: text/javascript
            json:
              - application/json
              - text/json
            multipartForm: multipart/form-data
            pdf: application/pdf
            rss: application/rss+xml
            text: text/plain
            hal:
              - application/hal+json
              - application/hal+xml
            xml:
              - text/xml
              - application/xml
    urlmapping:
        cache:
            maxsize: 1000
    controllers:
        defaultScope: singleton
    converters:
        encoding: UTF-8
    views:
        default:
            codec: html
        gsp:
            encoding: UTF-8
            htmlcodec: xml
            codecs:
                expression: html
                scriptlets: html
                taglib: none
                staticparts: none
endpoints:
    jmx:
        unique-names: true

quartz:
    autoStartup: true
    jdbcStore: true
    waitForJobsToCompleteOnShutdown: true

    scheduler:
        instanceName: 'FeedbackScheduler'
        instanceId: 'AUTO'
        skipUpdateCheck: true        # get rid of annoying message on startup

    threadPool.class: 'org.quartz.simpl.SimpleThreadPool'
    threadPool:
        threadCount: 5               # Quartz max threads (jobs) at the same time
        threadPriority: 5            # Thread.MIN_PRIORITY level

    # handles its own transactions with the database
    jobStore.class: 'org.quartz.impl.jdbcjobstore.JobStoreTX'
    jobStore:
        misfireThreshold: 60000
        driverDelegateClass: 'org.quartz.impl.jdbcjobstore.StdJDBCDelegate'
        useProperties: false         # Properties passed to the job are NOT all String objects
        tablePrefix: 'QRTZ_'         # Prefix for the Quartz tables in the database
        isClustered: true            # Tell Quartz it is clustered
        clusterCheckinInterval: 5000 # Check in with the cluster every 5000 ms

    # Detect the jvm shutdown and call shutdown on the scheduler
    plugin:
      shutdownhook.cleanShutdown: true
      shutdownhook.class: 'org.quartz.plugins.management.ShutdownHookPlugin'

    # Log the history of triggers and jobs
    triggerHistory.class: 'org.quartz.plugins.history.LoggingTriggerHistoryPlugin'
    jobHistory.class: 'org.quartz.plugins.history.LoggingJobHistoryPlugin'

---
hibernate:
    cache:
        queries: false
        use_second_level_cache: false
        use_query_cache: false
dataSource:
    pooled: true
    driverClassName: com.mysql.jdbc.Driver
    dialect: org.hibernate.dialect.MySQL5InnoDBDialect
    properties:
        jmxEnabled: true
        initialSize: 5
        maxActive: 100
        minIdle: 100
        maxIdle: 25
        maxWait: 30000
        maxAge: 600000
        timeBetweenEvictionRunsMillis: 5000
        minEvictableIdleTimeMillis: 60000
        validationQuery: "SELECT 1"
        validationQueryTimeout: 3
        validationInterval: 15000
        testOnBorrow: true
        testWhileIdle: true
        testOnReturn: false
        ignoreExceptionOnPreLoad: true
        #http://tomcat.apache.org/tomcat-7.0-doc/jdbc-pool.html#JDBC_interceptors
        jdbcInterceptors: "ConnectionState;StatementCache(max=200)"
        defaultTransactionIsolation: 2 # safe default
        #controls for leaked connections
        abandonWhenPercentageFull: 100 # settings are active only when pool is full
        removeAbandonedTimeout: 120
        removeAbandoned: true
        #use JMX console to change this setting at runtime
        logAbandoned: false # causes stacktrace recording overhead, use only for debugging
        dbProperties:
            #Mysql specific driver properties
            #http://dev.mysql.com/doc/connector-j/en/connector-j-reference-configuration-properties.html
            #let Tomcat JDBC Pool handle reconnecting
            autoReconnect: false
            #truncation behaviour
            jdbcCompliantTruncation: false
            #mysql 0-date conversion
            zeroDateTimeBehavior: 'convertToNull'
            #Tomcat JDBC Pool's StatementCache is used instead, so disable mysql driver's cache
            cachePrepStmts: false
            cacheCallableStmts: false
            #Tomcat JDBC Pool's StatementFinalizer keeps track
            dontTrackOpenResources: true
            #performance optimization: reduce number of SQLExceptions thrown in mysql driver code
            holdResultsOpenOverStatementClose: true
            #enable MySQL query cache - using server prep stmts will disable query caching
            useServerPrepStmts: false
            #metadata caching
            cacheServerConfiguration: true
            cacheResultSetMetadata: true
            metadataCacheSize: 100
            #timeouts for TCP/IP
            connectTimeout: 15000
            socketTimeout: 120000
            #timer tuning (disable)
            maintainTimeStats: false
            enableQueryTimeouts: false
            #misc tuning
            noDatetimeStringSync: true

environments:
    production:
        publicURL: ${public_url}
        canvas:
            oauthToken: ${canvas_api_key}
            canvasBaseUrl: ${canvas_url}
            ltiSecret: ${lti_secret}
            emailTermCode: ${emailTermCode}
            weeklyReminder:
                hourParam: ${weekly_hourParam}
                dayParam: ${weekly_dayParam}
            dailyReminder:
                hourParam: ${daily_hourParam}
        dataSource:
            dbCreate: update
            username: ${db_username}
            password: ${db_password}
            url: ${db_url}
